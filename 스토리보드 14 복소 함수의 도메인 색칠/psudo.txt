프로그램의 기능/목적 : 사용자가 임의의  z에 대한 식 을 입력하면, 그 식을 복소수에서 복소수로 가는 함수 f(z) : C -> C 로 본 뒤, 복소평면 정의역 색칠을 통해 나타낸 그림을 출력한다.

구현 순서:

1. 사용자가 입력한 식을 함수로 이해한다. => sympy 이용 (CAS의 파이썬 버전. symbol + python)
=> x를 z로 바꿔야 할 것.

2. 해당 함수의 -1.0-1.0i ~ +1.0+1.0i 까지의 정의역을 대략 10000개로 쪼갠 list를 만든 뒤, 각 list의 원소를 함수에 집어넣은 결과값 list를 반환한다. 이를 합친 데이터 뭉치를 만든다.
=> numpy.linspace를 2번 사용하여 2개의 실수축을 만든 뒤 for문을 2번 중첩하여 2차원 튜플 뭉치를 만드는 식으로 정의역 복소평면을 구현한다.
=> 대입하는 .subs 의 대입 과정을 조금 바꿔야 할 것. 사용자 정의 함수를 만드는 것도 방법.
=> 결과값이 원래는 복소수로 나와야 하지만, 그러지 않고 2개의 실수를 반환하도록 할 것. 그래야 처리가 빠르고 간편해진다.

3. 데이터 뭉치를 이용하여 해당 함수의 정의역 색칠을 통해 나타낸 그림을 출력한다. => pygame 이용(파이썬 스크립트 기반 게임 엔진.)
=> 데이터 뭉치의 결과값 복소수를 색상 RGB값으로 변환해주는 함수가 필요하다. 기존 함수는 실수 -> 색상 이기 때문에 변경이 필요하다. 복소수에 색을 입힐 때 각도(복소수의 편각)에 따라 색상 종류와 농도가 달라지기 때문에 매우 신중하게 함수를 만들어야 한다. 자료조사도 크게 필요할 듯 하다.


512+-250 320+-250

시간 너무 오래걸려...
=> 병렬처리 시작!